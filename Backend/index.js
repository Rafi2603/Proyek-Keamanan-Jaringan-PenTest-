const express = require('express');
const app = express();
const { Client } = require('pg');
const cors = require('cors');
const bp = require('body-parser');
const path = require('path');
const session = require('express-session');
require('dotenv').config();

const corsOptions = {
  origin: 'http://localhost:2655', // Sesuaikan dengan origin yang sesuai
  credentials: true,
  optionsSuccessStatus: 200
};

const db = new Client({
    user: 'rafi.fauzan',
    host: 'ep-delicate-wave-93484666.ap-southeast-1.aws.neon.tech',
    database: 'kemjarDB',
    password: 'WhQIFrgRb4J0',
    port: 5432,
    sslmode: 'require',
    ssl: true,
});

db.connect((err) => {
    if (err) {
        console.log(err);
    } else {
        console.log('Connected Database');
    }
});

app.use(session({
    secret: 'your-secret-key',
    resave: false,
    saveUninitialized: true,
  }));

app.use(cors(corsOptions));
app.use(bp.json());
app.use(bp.urlencoded({ extended: true }));
app.use(express.static(path.join(__dirname, '../Frontend')));


app.get('/listcustomer', async (req,res)=>{
    db.query('SELECT * FROM customer', (err,results)=>{
        if(err){
            console.log(err)
            return
        }
        res.json({message: 'Data Found', showItems: results.rows});
    })
})


app.post('/login', async (req, res) => {
    const { cust_name, password } = req.body;
    const query = 'SELECT cust_name, password, role FROM CUSTOMER WHERE cust_name = $1;';
    db.query(query, [cust_name], (err, results) => {
      if (err) {
        return res.status(500).send('Internal Server Error');
      }
  
      if (results.rowCount < 1) {
        return res.status(401).send('Nama salah'); // Nama tidak ditemukan
      }
  
      const storedPassword = results.rows[0].password;
      const userRole = results.rows[0].role;
  
      if (password === storedPassword) {
        if (userRole === 'Admin' || userRole === 'User') {
            console.log(query)
            return res.status(200).json({
                message: "Login successful", showItems: results.rows
            });
        } else {
            return res.status(401).send('Hanya user dan admin yang dapat login');
        }
      } 
      return res.status(401).send('Password salah');
    });
});


app.get('/home', (req, res) => {
  res.sendFile(path.join(__dirname, '../Frontend', 'login.html'));
});


app.listen(2655,()=>{
  console.log('Server berjalan pada port 2655')
})




